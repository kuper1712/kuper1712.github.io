<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://kuper1712.github.io/</id><title>kuper1712의 블로그</title><subtitle>kuper1712의 개발 블로그입니다.</subtitle> <updated>2023-01-10T07:06:18+00:00</updated> <author> <name>kuper1712</name> <uri>https://kuper1712.github.io/</uri> </author><link rel="self" type="application/atom+xml" href="https://kuper1712.github.io/feed.xml"/><link rel="alternate" type="text/html" hreflang="ko-KR" href="https://kuper1712.github.io/"/> <generator uri="https://jekyllrb.com/" version="4.3.1">Jekyll</generator> <rights> © 2023 kuper1712 </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>BOJ 3495 아스키 도형</title><link href="https://kuper1712.github.io/posts/boj-3495/" rel="alternate" type="text/html" title="BOJ 3495 아스키 도형" /><published>2022-03-03T00:00:00+00:00</published> <updated>2023-01-10T07:05:57+00:00</updated> <id>https://kuper1712.github.io/posts/boj-3495/</id> <content src="https://kuper1712.github.io/posts/boj-3495/" /> <author> <name>kuper0201</name> </author> <category term="알고리즘" /> <summary> BOJ 문제 풀이 문제 (link) 창영이는 메모장에 ., \, /을 이용해서 도형을 그렸다. 각 문자는 그림에서 1*1크기의 단위 정사각형을 나타낸다. .은 빈 칸을 나타내며, /는 정사각형의 왼쪽 아래 꼭짓점과 오른쪽 위 꼭짓점이 연결된 선분을, \은 왼쪽 위 꼭짓점과 오른쪽 아래 꼭짓점이 연결된 선분을 나타낸다. 창영이가 그린 도형의 넓이를 출력하는 프로그램을 작성하시오. 입력 첫째 줄에 h와 w가 주어진다. h는 그림의 높이, w는 너비이다. (2 ≤ h,w ≤ 100) 다음 h개 줄에는 창영이가 메모장에 그린 다각형이 주어진다. 창영이가 그린 다각형은 1개이고, 변과 변이 서로 교차하는 경우는 없고, 자기 자신과 접하는 경우도 없다. 풀이 편의상 / \ 기호를 변이라 하겠다. ... </summary> </entry> <entry><title>BOJ 10814 나이순 정렬</title><link href="https://kuper1712.github.io/posts/boj-10814/" rel="alternate" type="text/html" title="BOJ 10814 나이순 정렬" /><published>2022-03-01T00:00:00+00:00</published> <updated>2023-01-10T07:05:41+00:00</updated> <id>https://kuper1712.github.io/posts/boj-10814/</id> <content src="https://kuper1712.github.io/posts/boj-10814/" /> <author> <name>kuper0201</name> </author> <category term="알고리즘" /> <summary> BOJ 문제 풀이 문제 (link) 온라인 저지에 가입한 사람들의 나이와 이름이 가입한 순서대로 주어진다. 이때, 회원들을 나이가 증가하는 순으로, 나이가 같으면 먼저 가입한 사람이 앞에 오는 순서로 정렬하는 프로그램을 작성하시오. 입력 첫째 줄에 온라인 저지 회원의 수 N이 주어진다. (1 ≤ N ≤ 100,000) 둘째 줄부터 N개의 줄에는 각 회원의 나이와 이름이 공백으로 구분되어 주어진다. 나이는 1보다 크거나 같으며, 200보다 작거나 같은 정수이고, 이름은 알파벳 대소문자로 이루어져 있고, 길이가 100보다 작거나 같은 문자열이다. 입력은 가입한 순서로 주어진다. 풀이 회원들의 나이와 가입일을 기준으로 정렬하는 문제이다. 정렬 알고리즘은 안정 정렬 과 불안정 정렬로 나눠... </summary> </entry> <entry><title>BOJ 1181 단어 정렬</title><link href="https://kuper1712.github.io/posts/boj-1181/" rel="alternate" type="text/html" title="BOJ 1181 단어 정렬" /><published>2021-03-05T00:00:00+00:00</published> <updated>2023-01-10T07:05:23+00:00</updated> <id>https://kuper1712.github.io/posts/boj-1181/</id> <content src="https://kuper1712.github.io/posts/boj-1181/" /> <author> <name>kuper0201</name> </author> <category term="알고리즘" /> <summary> BOJ 문제 풀이 문제 (link) 알파벳 소문자로 이루어진 N개의 단어가 들어오면 아래와 같은 조건에 따라 정렬하는 프로그램을 작성하시오. 길이가 짧은 것부터 길이가 같으면 사전 순으로 입력 첫째 줄에 단어의 개수 N이 주어진다. (1 ≤ N ≤ 20,000) 둘째 줄부터 N개의 줄에 걸쳐 알파벳 소문자로 이루어진 단어가 한 줄에 하나씩 주어진다. 주어지는 문자열의 길이는 50을 넘지 않는다. 풀이 주어진 기준대로 단어를 정렬하는 문제이다. 코드 보기(Java) import java.io.*; import java.util.*; class Main { public static void main(String[] args) throws IOException { ... </summary> </entry> <entry><title>BOJ 18870 좌표 압축</title><link href="https://kuper1712.github.io/posts/boj-18870/" rel="alternate" type="text/html" title="BOJ 18870 좌표 압축" /><published>2021-03-02T00:00:00+00:00</published> <updated>2023-01-10T07:05:08+00:00</updated> <id>https://kuper1712.github.io/posts/boj-18870/</id> <content src="https://kuper1712.github.io/posts/boj-18870/" /> <author> <name>kuper0201</name> </author> <category term="알고리즘" /> <summary> BOJ 문제 풀이 문제 (link) 수직선 위에 N개의 좌표 X1, X2, …, XN이 있다. 이 좌표에 좌표 압축을 적용하려고 한다. Xi를 좌표 압축한 결과 X’i의 값은 Xi &amp;gt; Xj를 만족하는 서로 다른 좌표의 개수와 같아야 한다. X1, X2, …, XN에 좌표 압축을 적용한 결과 X’1, X’2, …, X’N를 출력해보자. 입력 첫째 줄에 N이 주어진다. 둘째 줄에는 공백 한 칸으로 구분된 X1, X2, …, XN이 주어진다. 풀이 큰 좌표값을 압축하는 문제이다. 좌표 압축 기법은 데이터가 크지만 의미있는 데이터는 적은 경우에 의미 없는 데이터는 없애고 의미있는 데이터만 남기기 위해 자주 사용된다. 예시로 1000, 999, 1000, 999 라는 좌표가 있다고... </summary> </entry> <entry><title>음성으로 TV제어하기 - 3.음성 인식</title><link href="https://kuper1712.github.io/posts/ir-remote3/" rel="alternate" type="text/html" title="음성으로 TV제어하기 - 3.음성 인식" /><published>2020-03-04T00:00:00+00:00</published> <updated>2023-01-10T07:04:51+00:00</updated> <id>https://kuper1712.github.io/posts/ir-remote3/</id> <content src="https://kuper1712.github.io/posts/ir-remote3/" /> <author> <name>kuper0201</name> </author> <category term="개인프로젝트" /> <summary> 음성으로 TV를 제어해 보자! 지금까지는 음성인식 후의 신호를 만들어주는 부분을 구현했다. 이번에는 실제로 음성인식을 수행하는 부분을 만들어 볼 것이다. 필자는 이 프로젝트를 진행하며 직접 음성인식 모델을 구축할지, 기존에 제작되어 있는 API를 가져다 쓸 지에 대하여 고민을 많이 했다. 음성인식 모델을 직접 구현해보니 음성데이터와 컴퓨팅 파워가 부족해서 인식률과 학습 속도가 떨어지는 문제가 있었고, API를 이용하면 요청 건당 가격을 지불해야 하는 등의 문제가 있었다. 이런 문제들 때문에 다양한 API와 모델 학습 방법을 구글링해 본 결과 안드로이드OS의 내장 음성 인식 기능을 이용하는것이 가장 효율적이라는 결론에 이르렀다. 하지만 안드로이드OS의 내장 음성인식 기능을 사용하기 위해서도 문제가 ... </summary> </entry> </feed>
